{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "FilterlambdaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/filter-lambda-dev-filterlambda"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "edgelambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "filter-lambda",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/filter-lambda-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/filter-lambda-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "execute-api:Invoke",
                    "secretsmanager:GetSecretValue"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "filter-lambda",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "FilterlambdaLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/filter-lambda/dev/1699340298791-2023-11-07T06:58:18.791Z/filter-lambda.zip"
        },
        "Handler": "filterlambda.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "filter-lambda-dev-filterlambda",
        "MemorySize": 128,
        "Timeout": 5,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "FilterlambdaLogGroup"
      ],
      "DeletionPolicy": "Retain"
    },
    "FilterlambdaLambdaVersionbeKPhSer3VwxexwpYIfiVbHUDNJ9IVOq11UT9e1xh7A": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FilterlambdaLambdaFunction"
        },
        "CodeSha256": "0fHhsMkCRX8gP3b3amfPQE1ZTI/cRqwV2Ksrb1lePTA="
      }
    },
    "FilterlambdaLambdaFunctionInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "FilterlambdaLambdaVersionbeKPhSer3VwxexwpYIfiVbHUDNJ9IVOq11UT9e1xh7A"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "edgelambda.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "",
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":cloudfront::",
              {
                "Ref": "AWS::AccountId"
              },
              ":distribution/",
              {
                "Ref": "CloudFrontDistribution"
              }
            ]
          ]
        }
      }
    },
    "CloudFrontDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Comment": "filter-lambda dev",
          "Enabled": true,
          "DefaultCacheBehavior": {
            "ViewerProtocolPolicy": "allow-all",
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "TargetOriginId": "s3/bismarter-site.s3.amazonaws.com",
            "LambdaFunctionAssociations": [
              {
                "EventType": "viewer-request",
                "LambdaFunctionARN": {
                  "Ref": "FilterlambdaLambdaVersionbeKPhSer3VwxexwpYIfiVbHUDNJ9IVOq11UT9e1xh7A"
                }
              }
            ]
          },
          "Origins": [
            {
              "DomainName": "bismarter-site.s3.amazonaws.com",
              "S3OriginConfig": {},
              "Id": "s3/bismarter-site.s3.amazonaws.com"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-filter-lambda-dev-ServerlessDeploymentBucketName"
      }
    },
    "FilterlambdaLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FilterlambdaLambdaVersionbeKPhSer3VwxexwpYIfiVbHUDNJ9IVOq11UT9e1xh7A"
      },
      "Export": {
        "Name": "sls-filter-lambda-dev-FilterlambdaLambdaFunctionQualifiedArn"
      }
    },
    "CloudFrontDistribution": {
      "Description": "CloudFront Distribution Id",
      "Value": {
        "Ref": "CloudFrontDistribution"
      },
      "Export": {
        "Name": "sls-filter-lambda-dev-CloudFrontDistribution"
      }
    },
    "CloudFrontDistributionDomainName": {
      "Description": "CloudFront Distribution Domain Name",
      "Value": {
        "Fn::GetAtt": [
          "CloudFrontDistribution",
          "DomainName"
        ]
      },
      "Export": {
        "Name": "sls-filter-lambda-dev-CloudFrontDistributionDomainName"
      }
    }
  }
}